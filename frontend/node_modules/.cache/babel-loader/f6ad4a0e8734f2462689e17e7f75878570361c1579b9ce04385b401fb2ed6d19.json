{"ast":null,"code":"import axios from 'axios';\nimport config from '../utils/config.js';\nconst axiosInstance = axios.create({\n  baseURL: config.BASE_URL,\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to add token to all requests\naxiosInstance.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add response interceptor for error handling\naxiosInstance.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    console.error('Response Error:', error.response.data);\n    if (error.response.status === 401) {\n      // Handle unauthorized access\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n  } else if (error.request) {\n    // The request was made but no response was received\n    console.error('Request Error:', error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.error('Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","config","axiosInstance","create","baseURL","BASE_URL","withCredentials","headers","interceptors","request","use","token","localStorage","getItem","Authorization","error","Promise","reject","response","console","data","status","removeItem","window","location","href","message"],"sources":["C:/Users/LENOVO/OneDrive/Documents/Arvidion/bbb Magang/aaa Project/Log-Book-Keamanan/frontend/src/api/axiosInstance.js"],"sourcesContent":["import axios from 'axios';\r\nimport config from '../utils/config.js';\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: config.BASE_URL,\r\n  withCredentials: true,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor to add token to all requests\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add response interceptor for error handling\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      console.error('Response Error:', error.response.data);\r\n      if (error.response.status === 401) {\r\n        // Handle unauthorized access\r\n        localStorage.removeItem('token');\r\n        window.location.href = '/login';\r\n      }\r\n    } else if (error.request) {\r\n      // The request was made but no response was received\r\n      console.error('Request Error:', error.request);\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      console.error('Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosInstance; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAEvC,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EACjCC,OAAO,EAAEH,MAAM,CAACI,QAAQ;EACxBC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAL,aAAa,CAACM,YAAY,CAACC,OAAO,CAACC,GAAG,CACnCT,MAAM,IAAK;EACV,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTV,MAAM,CAACM,OAAO,CAACO,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOV,MAAM;AACf,CAAC,EACAc,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAb,aAAa,CAACM,YAAY,CAACU,QAAQ,CAACR,GAAG,CACpCQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EACT,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAClBC,OAAO,CAACJ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACG,QAAQ,CAACE,IAAI,CAAC;IACrD,IAAIL,KAAK,CAACG,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;MACjC;MACAT,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;MAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;IACjC;EACF,CAAC,MAAM,IAAIV,KAAK,CAACN,OAAO,EAAE;IACxB;IACAU,OAAO,CAACJ,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACN,OAAO,CAAC;EAChD,CAAC,MAAM;IACL;IACAU,OAAO,CAACJ,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAACW,OAAO,CAAC;EACxC;EACA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}